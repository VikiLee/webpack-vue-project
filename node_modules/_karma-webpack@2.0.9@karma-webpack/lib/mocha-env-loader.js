'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sourceMap = require('source-map');
var loaderUtils = require('loader-utils');

var SourceNode = sourceMap.SourceNode;
var SourceMapConsumer = sourceMap.SourceMapConsumer;

module.exports = function (content, map) {
  this.cacheable();

  var sourceNode;
  var id = this.options.name;

  if (!id) {
    return this.callback(null, content, map);
  }

  if (map) {
    sourceNode = SourceNode.fromStringWithSourceMap(content, new SourceMapConsumer(map));
  } else {
    var fileName = loaderUtils.getRemainingRequest(this);

    sourceNode = new SourceNode(null, null, null);
    content.split('\n').forEach(function (line, idx) {
      sourceNode.add(new SourceNode(idx + 1, 0, fileName, line + '\n'));
    });
    sourceNode.setSourceContent(fileName, content);
  }

  var concatSrc = new SourceNode();

  concatSrc.add(['describe(' + (0, _stringify2.default)(id) + ', function() {\n', sourceNode, '\n});']);

  var result = concatSrc.toStringWithSourceMap();

  this.callback(undefined, result.code, result.map.toString());
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2hhLWVudi1sb2FkZXIuanMiXSwibmFtZXMiOlsic291cmNlTWFwIiwicmVxdWlyZSIsImxvYWRlclV0aWxzIiwiU291cmNlTm9kZSIsIlNvdXJjZU1hcENvbnN1bWVyIiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRlbnQiLCJtYXAiLCJjYWNoZWFibGUiLCJzb3VyY2VOb2RlIiwiaWQiLCJvcHRpb25zIiwibmFtZSIsImNhbGxiYWNrIiwiZnJvbVN0cmluZ1dpdGhTb3VyY2VNYXAiLCJmaWxlTmFtZSIsImdldFJlbWFpbmluZ1JlcXVlc3QiLCJzcGxpdCIsImZvckVhY2giLCJsaW5lIiwiaWR4IiwiYWRkIiwic2V0U291cmNlQ29udGVudCIsImNvbmNhdFNyYyIsInJlc3VsdCIsInRvU3RyaW5nV2l0aFNvdXJjZU1hcCIsInVuZGVmaW5lZCIsImNvZGUiLCJ0b1N0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZQyxRQUFRLFlBQVIsQ0FBaEI7QUFDQSxJQUFJQyxjQUFjRCxRQUFRLGNBQVIsQ0FBbEI7O0FBRUEsSUFBSUUsYUFBYUgsVUFBVUcsVUFBM0I7QUFDQSxJQUFJQyxvQkFBb0JKLFVBQVVJLGlCQUFsQzs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxPQUFULEVBQWtCQyxHQUFsQixFQUF1QjtBQUN0QyxPQUFLQyxTQUFMOztBQUVBLE1BQUlDLFVBQUo7QUFDQSxNQUFJQyxLQUFLLEtBQUtDLE9BQUwsQ0FBYUMsSUFBdEI7O0FBRUEsTUFBSSxDQUFDRixFQUFMLEVBQVM7QUFDUCxXQUFPLEtBQUtHLFFBQUwsQ0FBYyxJQUFkLEVBQW9CUCxPQUFwQixFQUE2QkMsR0FBN0IsQ0FBUDtBQUNEOztBQUVELE1BQUlBLEdBQUosRUFBUztBQUNQRSxpQkFBYVAsV0FBV1ksdUJBQVgsQ0FBbUNSLE9BQW5DLEVBQTRDLElBQUlILGlCQUFKLENBQXNCSSxHQUF0QixDQUE1QyxDQUFiO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsUUFBSVEsV0FBV2QsWUFBWWUsbUJBQVosQ0FBZ0MsSUFBaEMsQ0FBZjs7QUFFQVAsaUJBQWEsSUFBSVAsVUFBSixDQUFlLElBQWYsRUFBcUIsSUFBckIsRUFBMkIsSUFBM0IsQ0FBYjtBQUNBSSxZQUFRVyxLQUFSLENBQWMsSUFBZCxFQUFvQkMsT0FBcEIsQ0FBNEIsVUFBU0MsSUFBVCxFQUFlQyxHQUFmLEVBQW9CO0FBQzlDWCxpQkFBV1ksR0FBWCxDQUFlLElBQUluQixVQUFKLENBQWVrQixNQUFNLENBQXJCLEVBQXdCLENBQXhCLEVBQTJCTCxRQUEzQixFQUFxQ0ksT0FBTyxJQUE1QyxDQUFmO0FBQ0QsS0FGRDtBQUdBVixlQUFXYSxnQkFBWCxDQUE0QlAsUUFBNUIsRUFBc0NULE9BQXRDO0FBQ0Q7O0FBRUQsTUFBSWlCLFlBQVksSUFBSXJCLFVBQUosRUFBaEI7O0FBRUFxQixZQUFVRixHQUFWLENBQWMsQ0FDWixjQUFjLHlCQUFlWCxFQUFmLENBQWQsR0FBbUMsa0JBRHZCLEVBQzJDRCxVQUQzQyxFQUN1RCxPQUR2RCxDQUFkOztBQUlBLE1BQUllLFNBQVNELFVBQVVFLHFCQUFWLEVBQWI7O0FBRUEsT0FBS1osUUFBTCxDQUFjYSxTQUFkLEVBQXlCRixPQUFPRyxJQUFoQyxFQUFzQ0gsT0FBT2pCLEdBQVAsQ0FBV3FCLFFBQVgsRUFBdEM7QUFDRCxDQS9CRCIsImZpbGUiOiJtb2NoYS1lbnYtbG9hZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNvdXJjZU1hcCA9IHJlcXVpcmUoJ3NvdXJjZS1tYXAnKVxudmFyIGxvYWRlclV0aWxzID0gcmVxdWlyZSgnbG9hZGVyLXV0aWxzJylcblxudmFyIFNvdXJjZU5vZGUgPSBzb3VyY2VNYXAuU291cmNlTm9kZVxudmFyIFNvdXJjZU1hcENvbnN1bWVyID0gc291cmNlTWFwLlNvdXJjZU1hcENvbnN1bWVyXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29udGVudCwgbWFwKSB7XG4gIHRoaXMuY2FjaGVhYmxlKClcblxuICB2YXIgc291cmNlTm9kZVxuICB2YXIgaWQgPSB0aGlzLm9wdGlvbnMubmFtZVxuXG4gIGlmICghaWQpIHtcbiAgICByZXR1cm4gdGhpcy5jYWxsYmFjayhudWxsLCBjb250ZW50LCBtYXApXG4gIH1cblxuICBpZiAobWFwKSB7XG4gICAgc291cmNlTm9kZSA9IFNvdXJjZU5vZGUuZnJvbVN0cmluZ1dpdGhTb3VyY2VNYXAoY29udGVudCwgbmV3IFNvdXJjZU1hcENvbnN1bWVyKG1hcCkpXG4gIH0gZWxzZSB7XG4gICAgdmFyIGZpbGVOYW1lID0gbG9hZGVyVXRpbHMuZ2V0UmVtYWluaW5nUmVxdWVzdCh0aGlzKVxuXG4gICAgc291cmNlTm9kZSA9IG5ldyBTb3VyY2VOb2RlKG51bGwsIG51bGwsIG51bGwpXG4gICAgY29udGVudC5zcGxpdCgnXFxuJykuZm9yRWFjaChmdW5jdGlvbihsaW5lLCBpZHgpIHtcbiAgICAgIHNvdXJjZU5vZGUuYWRkKG5ldyBTb3VyY2VOb2RlKGlkeCArIDEsIDAsIGZpbGVOYW1lLCBsaW5lICsgJ1xcbicpKVxuICAgIH0pXG4gICAgc291cmNlTm9kZS5zZXRTb3VyY2VDb250ZW50KGZpbGVOYW1lLCBjb250ZW50KVxuICB9XG5cbiAgdmFyIGNvbmNhdFNyYyA9IG5ldyBTb3VyY2VOb2RlKClcblxuICBjb25jYXRTcmMuYWRkKFtcbiAgICAnZGVzY3JpYmUoJyArIEpTT04uc3RyaW5naWZ5KGlkKSArICcsIGZ1bmN0aW9uKCkge1xcbicsIHNvdXJjZU5vZGUsICdcXG59KTsnXG4gIF0pXG5cbiAgdmFyIHJlc3VsdCA9IGNvbmNhdFNyYy50b1N0cmluZ1dpdGhTb3VyY2VNYXAoKVxuXG4gIHRoaXMuY2FsbGJhY2sodW5kZWZpbmVkLCByZXN1bHQuY29kZSwgcmVzdWx0Lm1hcC50b1N0cmluZygpKVxufVxuIl19